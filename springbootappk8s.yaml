apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-deployment
spec:
  selector:
    matchLabels:
      app: example-app
  replicas: 2
  template:
    metadata:
      labels:
        app: example-app
    spec:
      serviceAccountName: spring-sa
      containers:
        - name: spring-container
          image: dockerregistry.com/springbootjacoco:0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8082
      imagePullSecrets:
        - name: dockerregistry
---
apiVersion: v1
kind: Service
metadata:
  name: spring-service
spec:
  type: NodePort
  ports:
    - name: http
      port: 8082
      targetPort: 8082
  selector:
    app: example-app



# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: springbootapp-deployment
# spec:
#   template:
#      metadata:
#        name: springbootapp-pod
#        labels:
#          app: springbootapp
#      spec:
#          containers:
#            - name: springbootapp-image
#              image: "mhassanmanzoorsl/springbootjacoco:0.0.1"
#              ports:
#                - containerPort: 8081
#              imagePullPolicy: Always
#          imagePullSecrets:
#            - name: myregistrykey

#   replicas: 1
#   selector:
#     matchLabels:
#       app: springbootapp


# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: springbootapp-service
# spec:
#   selector:
#     app: springbootapp
#   type: LoadBalancer  
#   ports:
#     - protocol: TCP
#       targetPort: 3000
#       port: 8081
#       nodePort: 30000
      
#   externalIPs:
#     - "192.168.1.62"
